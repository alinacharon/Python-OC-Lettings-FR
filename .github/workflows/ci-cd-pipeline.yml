name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: check out code
      uses: actions/checkout@v3

    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: set up environment for testing
      run: |
        echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> $GITHUB_ENV
        echo "SECRET_KEY_DJANGO=${{ secrets.SECRET_KEY_DJANGO }}" >> $GITHUB_ENV

    - name: run linter (flake8)
      run: |
        flake8 .

    - name: run tests (pytest)
      run: |
        pytest --maxfail=1 --disable-warnings -q
        pytest --cov=src --cov-report=term-missing

  build-and-push:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: lint-and-test
  
    steps:
    - name: check out code
      uses: actions/checkout@v3

    - name: set up docker buildx
      uses: docker/setup-buildx-action@v2

    - name: log in to docker hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: build docker image
      run: |
        docker build \
          --build-arg SENTRY_DSN="${{ secrets.SENTRY_DSN }}" \
          --build-arg SECRET_KEY_DJANGO="${{ secrets.SECRET_KEY_DJANGO }}" \
          -t "${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}" .

    - name: push docker image to docker hub
      run: |
        docker push ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}

  deploy-to-render:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: check out code
      uses: actions/checkout@v3

    - name: render deploy
      env:
        render_api_key: ${{ secrets.RENDER_API_KEY }}
        render_service_id: ${{ secrets.RENDER_SERVICE_ID }}
        docker_image_name: ${{ secrets.DOCKER_IMAGE_NAME }}
      run: |
        curl -X POST \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -d "{
            \"serviceId\": \"$RENDER_SERVICE_ID\",
            \"docker\": {
              \"image\": \"$DOCKER_IMAGE_NAME:${{ github.sha }}\"
            },
            \"envvars\": [
              {\"key\": \"SECRET_KEY_DJANGO\", \"value\": \"$SECRET_KEY_DJANGO\"}
            ]
          }" \
          https://api.render.com/v1/services/deploy