name: CI Pipeline

on:
  push:
    branches:
      - '**' 
  pull_request:
    branches:
      - '**'  

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Linter (flake8)
      run: |
        flake8 .

    - name: Run Tests (pytest)
      run: |
        pytest --maxfail=1 --disable-warnings -q
        pytest --cov=src --cov-report=term-missing

  build-and-push:
    runs-on: ubuntu-latest
    needs: lint-and-test 
    
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build Docker image
      run: |
       docker build -t alinacharon/lettings:${{ github.sha }} .
    
    - name: Push Docker image to Docker Hub
      run: |
       docker push alinacharon/lettings:${{ github.sha }}


        
  deploy-to-render:
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Render Deploy
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        curl -X POST \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -d "{
            \"serviceId\": \"your-render-service-id\",
            \"docker\": {
              \"image\": \"myusername/myapp:${{ github.sha }}\"
            }
          }" \
          https://api.render.com/v1/services/deploy
  
